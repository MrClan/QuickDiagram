<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    mc:Ignorable="d"
                    xmlns:ui="clr-namespace:Codartis.SoftVis.VisualStudioIntegration.UI"
                    xmlns:view="clr-namespace:Codartis.SoftVis.UI.Wpf.View;assembly=SoftVis.Diagramming"
                    xmlns:viewModel="clr-namespace:Codartis.SoftVis.UI.Wpf.ViewModel;assembly=SoftVis.Diagramming"
                    xmlns:modeling="clr-namespace:Codartis.SoftVis.Modeling;assembly=SoftVis.Diagramming"
                    xmlns:controls="clr-namespace:Codartis.SoftVis.Util.UI.Wpf.Controls;assembly=SoftVis.Util">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/SoftVis.Diagramming;component/Themes/Generic.xaml" />
        <ResourceDictionary Source="/SoftVis.Diagramming;component/UI/Wpf/View/AnimationConstants.xaml" />
        <ResourceDictionary Source="/QuickDiagramTool;component/UI/DecoratorPlacementDictionary.xaml" />
        <ResourceDictionary Source="/QuickDiagramTool;component/UI/DiagramNodeExpander.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    <ui:StereotypeToImageUriConverter x:Key="StereotypeToImageUriConverter" />
    <ui:StereotypeToBackgroundBrushConverter x:Key="StereotypeToBackgroundBrushConverter" />

    <Style TargetType="{x:Type view:DiagramControl}">
        <Setter Property="FontFamily" Value="Ariel"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Background" Value="WhiteSmoke"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="DiagramFill" Value="White"/>
        <Setter Property="DiagramStroke" Value="Black"/>
        <Setter Property="PanAndZoomControlHeight" Value="120"/>
        <Setter Property="UndisplayedEntityCuePlacementDictionary" Value="{StaticResource UndisplayedEntityCuePlacementDictionary}"/>
        <Setter Property="DiagramShapeButtonPlacementDictionary" Value="{StaticResource DiagramShapeButtonPlacementDictionary}"/>
    </Style>

    <Style TargetType="{x:Type view:DiagramNodeControl}">
        <Setter Property="MinHeight" Value="46"/>
        <Setter Property="MaxHeight" Value="112"/>
        <Setter Property="MinWidth" Value="50"/>
        <Setter Property="MaxWidth" Value="250"/>
    </Style>

    <Style TargetType="{x:Type view:DiagramNodeCoreControl}"
           d:DataContext="{d:DesignInstance {x:Type viewModel:DiagramNodeViewModel}}">
        <Setter Property="DiagramFill" Value="{Binding Path=Stereotype, Converter={StaticResource StereotypeToBackgroundBrushConverter}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>

                    <!-- ReSharper disable Xaml.BindingWithContextNotResolved -->
                    <Border Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DiagramFill}"
                            BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DiagramStroke}" 
                            BorderThickness="1">
                        <StackPanel Orientation="Vertical">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="16"></RowDefinition>
                                    <RowDefinition Height="*"></RowDefinition>
                                </Grid.RowDefinitions>
                                <Image Grid.Row="0" 
                                   Margin="1" 
                                   HorizontalAlignment="Left" 
                                   Source="{Binding Path=Stereotype, Converter={StaticResource StereotypeToImageUriConverter}}"/>
                                <TextBlock x:Name="TextBlock"
                                       Grid.Row="1" 
                                       Margin="4,0,4,0" 
                                       VerticalAlignment="Top" 
                                       HorizontalAlignment="Center"
                                       Text="{Binding Path=Name, Mode=OneWay}" 
                                       TextWrapping="Wrap"/>
                            </Grid>
                            <controls:ConcealableExpander Margin="4,6,4,4"
                                                          IsButtonVisible="False"
                                                          Visibility="{Binding Path=DescriptionExists, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                          BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DiagramStroke}" 
                                                          BorderThickness=".5"
                                                          IsExpanded="{Binding Path=IsDescriptionVisible, Mode=TwoWay}">
                                <TextBlock FontSize="10"
                                           TextWrapping="Wrap"
                                           Text="{Binding Path=Description}"
                                           ToolTip="{Binding Path=Description}"/>
                            </controls:ConcealableExpander>
                        </StackPanel>
                    </Border>

                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding ModelEntity.Origin}" Value="{x:Static modeling:ModelOrigin.SourceCode}">
                            <Setter TargetName="TextBlock" Property="FontWeight" Value="Bold"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ModelEntity.IsAbstract}" Value="true">
                            <Setter TargetName="TextBlock" Property="FontStyle" Value="Italic"></Setter>
                        </DataTrigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>